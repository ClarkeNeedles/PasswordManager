/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.PrintWriter;
import java.io.FileWriter;
import java.io.IOException; 
import java.io.File; 
import java.io.FileNotFoundException;  
import java.util.Scanner; 
import java.util.ArrayList;
import javax.swing.JOptionPane;  

/**
 *
 * @author cwnee
 */
public class PasswordManagerFrame extends javax.swing.JFrame {
    
    private boolean seePassword = true;
    private String key = "Mary has one cat";
    
    /**
     * Creates new form passwordManagerFrame
     */
    public PasswordManagerFrame() {
        initComponents();
        jPanel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        enterKeyLabel = new javax.swing.JLabel();
        keyHelperLabel = new javax.swing.JLabel();
        seePasswordButton = new javax.swing.JRadioButton();
        keyPasswordField = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enterKeyLabel.setText("Enter Master Key");

        keyHelperLabel.setText("If you have not yet set a key, do this now.");

        seePasswordButton.setText("Show Password");
        seePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seePasswordButtonActionPerformed(evt);
            }
        });

        keyPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyPasswordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(enterKeyLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(keyHelperLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(keyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seePasswordButton)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(enterKeyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyHelperLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seePasswordButton)
                    .addComponent(keyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jPanel1.setOpaque(false);
        
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        
        jLabel6.setText("Login Title: ");
        jLabel6.setToolTipText("");
        
        File directoryPath = new File("C:\\Users\\334680964\\Desktop\\Coding\\passwordmanager");
        String contents[] = directoryPath.list();
        ArrayList<String> entries = new ArrayList<>();
        for (int i = 0; i < contents.length; i++) {
            if (contents[i].contains("ntry")) {
                entries.add(contents[i].substring(4,contents[i].length()-4));
            }
        }
        String[] entriesArray = new String[entries.size()];
        entries.toArray(entriesArray);
        
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(entriesArray));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        
        jLabel1.setText("Search for login info");

        jLabel2.setText("Add a new login");
        
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        
        jPasswordField2.setText("NewPassword");
        jPasswordField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Username: ");

        jLabel4.setText("Password: ");

        jRadioButton1.setText("See Password");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel3)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPasswordField2, jTextField1, jTextField2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jRadioButton1))
                .addGap(90, 90, 90))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPasswordField2, jTextField1, jTextField2});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>                        

    private void seePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (seePassword) {
            keyPasswordField.setEchoChar((char) 0);
            seePassword = false;
        }
        else {
            keyPasswordField.setEchoChar('*');
            seePassword = true;
        }
    }    
    
    private void keyPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            File mFile = new File("mKey.txt");
            Scanner reader = new Scanner(mFile);
            if(reader.hasNextLine()) {
                File decrypted = new File("decrypted.txt");
                try {
                    decrypted.createNewFile();
                } catch (IOException e) {
                    System.out.println("An error occurred.");
                    e.printStackTrace();
                }
                try {
                    CipherObj.decrypt(key, mFile, decrypted);
                } catch (CryptoException | NoSuchMethodError ex) {
                    System.out.println(ex.getMessage());
                    ex.printStackTrace();
                }
                Scanner dReader = new Scanner(decrypted);
                if (dReader.nextLine().equals(evt.getActionCommand())) {
                    seePassword = true;
                    jPanel1.setVisible(true);
                    jPanel2.setVisible(false);
                }
                dReader.close();
                decrypted.delete();
            }
            else {
                try {
                    File encrypted = new File("encrypted.txt");
                    try {
                        encrypted.createNewFile();
                    } catch (IOException e) {
                        System.out.println("An error occurred.");
                        e.printStackTrace();
                    }
                    FileWriter writer = new FileWriter("encrypted.txt");
                    writer.write(evt.getActionCommand());
                    writer.close();
                    try {
                        CipherObj.encrypt(key, encrypted, mFile);
                    } catch (Exception ex) {
                        System.out.println(ex.getMessage());
                        ex.printStackTrace();
                    }
                }
                catch ( IOException e) {
                    System.err.println( "Sorry, error with output file" );
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        File encrypted = new File("encrypted.txt");
        encrypted.delete();
        File decrypted = new File("decrypted.txt");
        decrypted.delete();
    }
    
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if (seePassword) {
            jPasswordField2.setEchoChar((char) 0);
            seePassword = false;
        }
        else {
            jPasswordField2.setEchoChar('*');
            seePassword = true;
        }
    } 
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) { 
        if (!jTextField1.getText().equals("") && !jTextField2.getText().equals("")) {
            jComboBox1.addItem(jTextField2.getText().trim());
            encryptEntry(jTextField1.getText().trim(), jPasswordField2.getPassword(), jTextField2.getText().trim());
            jTextField1.setText("");
            jTextField2.setText("");
        }
    }  
    
    private void jPasswordField2ActionPerformed(java.awt.event.ActionEvent evt) {  
        if (!jTextField1.getText().equals("") && !jTextField2.getText().equals("")) {
            jComboBox1.addItem(jTextField2.getText().trim());
            encryptEntry(jTextField1.getText().trim(), jPasswordField2.getPassword(), jTextField2.getText().trim());
            jTextField1.setText("");
            jTextField2.setText("");
        } 
    }
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {  
        if (!jTextField1.getText().equals("") && !jTextField2.getText().equals("")) {
            jComboBox1.addItem(jTextField2.getText().trim());
            encryptEntry(jTextField1.getText().trim(), jPasswordField2.getPassword(), jTextField2.getText().trim());
            jTextField1.setText("");
            jTextField2.setText("");
        }
    }                                           
    
    private void encryptEntry(String username, char[] password, String title) {
        File input = new File ("temp.txt");
        File output = new File("ntry"+title+".txt");
        try {
            input.createNewFile();
            output.createNewFile();
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        try {
            FileWriter writer = new FileWriter("temp.txt");
            writer.write(username+"\n");
            writer.write(password);
            writer.close();
        } catch ( IOException e) {
                System.err.println( "Sorry, error with output file" );
            }
        try {
            CipherObj.encrypt(key, input, output);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        input.delete();
    }
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {       
        File output = new File("temp.txt");
        File input = new File("ntry"+jComboBox1.getSelectedItem()+".txt");
        try {
            CipherObj.decrypt(key, input, output);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        try {
            Scanner reader = new Scanner(output);
            JOptionPane.showMessageDialog(null,"Username: "+reader.nextLine()+"\n"+"Password: "+reader.nextLine() );
        } catch( FileNotFoundException ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        File out = new File("temp.txt");
        out.delete();
    }   

    // Variables declaration - do not modify                     
    private javax.swing.JLabel enterKeyLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel keyHelperLabel;
    private javax.swing.JPasswordField keyPasswordField;
    private javax.swing.JRadioButton seePasswordButton;
    // End of variables declaration                   
}
