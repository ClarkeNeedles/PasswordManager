/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.PrintWriter;
import java.io.FileWriter;
import java.io.IOException; 
import java.io.File; 
import java.io.FileNotFoundException;  
import java.util.Scanner; 
import java.util.ArrayList;
import javax.swing.JOptionPane;  

/**
 *
 * @author cwnee
 */
public class PasswordManagerFrame extends javax.swing.JFrame {
    
    private boolean seePassword = true;
    private String key = "Mary has one cat";
    
    /**
     * Creates new form passwordManagerFrame
     */
    public PasswordManagerFrame() {
        initComponents();
        mainPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox<>();
        newLoginLabel = new javax.swing.JLabel();
        loginTitleLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        loginTitleField = new javax.swing.JTextField();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        seePasswordButton1 = new javax.swing.JRadioButton();
        deleteButton = new javax.swing.JButton();
        masterPanel = new javax.swing.JPanel();
        keyPromptLabel = new javax.swing.JLabel();
        keyPasswordField = new javax.swing.JPasswordField();
        seePasswordButton = new javax.swing.JRadioButton();
        keyHelperLabel = new javax.swing.JLabel();
        sessionStatusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchLabel.setText("Search For Login");
        
         File directoryPath = new File("C:\\Users\\334680964\\Desktop\\Coding\\passwordmanager");
        String contents[] = directoryPath.list();
        ArrayList<String> entries = new ArrayList<>();
        for (int i = 0; i < contents.length; i++) {
            if (contents[i].contains("ntry")) {
                entries.add(contents[i].substring(4,contents[i].length()-4));
            }
        }
        String[] entriesArray = new String[entries.size()];
        entries.toArray(entriesArray);
        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(entriesArray));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        newLoginLabel.setText("Add New Login");

        loginTitleLabel.setText("Login Title:");

        usernameLabel.setText("Username:");

        passwordLabel.setText("Password:");

        loginTitleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginTitleFieldActionPerformed(evt);
            }
        });

        passwordField.setText("NewPassword");
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        seePasswordButton1.setText("See Password");
        seePasswordButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seePasswordButton1ActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete Entry");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        
        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLabel)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(usernameLabel)
                        .addComponent(loginTitleLabel)))
                .addGap(25, 25, 25)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newLoginLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(loginTitleField)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seePasswordButton1))
                    .addComponent(deleteButton))
                .addGap(44, 44, 44))
        );

        mainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {loginTitleField, passwordField, usernameField});

        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(searchLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(newLoginLabel)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginTitleLabel)
                    .addComponent(loginTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seePasswordButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addGap(37, 37, 37))
        );

        keyPromptLabel.setText("Enter the Master Key");
        keyPromptLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        keyPasswordField.setText("");
        keyPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyPasswordFieldActionPerformed(evt);
            }
        });

        seePasswordButton.setText("See password");
        seePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seePasswordButtonActionPerformed(evt);
            }
        });

        keyHelperLabel.setText("(If you have not made a password yet, set it now)");

        sessionStatusLabel.setText("");

        javax.swing.GroupLayout masterPanelLayout = new javax.swing.GroupLayout(masterPanel);
        masterPanel.setLayout(masterPanelLayout);
        masterPanelLayout.setHorizontalGroup(
            masterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(masterPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(masterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(masterPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(sessionStatusLabel))
                    .addGroup(masterPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(keyPromptLabel))
                    .addGroup(masterPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(keyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seePasswordButton))
                    .addComponent(keyHelperLabel))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        masterPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {keyPasswordField, keyPromptLabel, seePasswordButton});

        masterPanelLayout.setVerticalGroup(
            masterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(masterPanelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(keyPromptLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyHelperLabel)
                .addGap(24, 24, 24)
                .addGroup(masterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seePasswordButton))
                .addGap(34, 34, 34)
                .addComponent(sessionStatusLabel)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        masterPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {keyPasswordField, seePasswordButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(masterPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void seePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (seePassword) {
            keyPasswordField.setEchoChar((char) 0);
            seePassword = false;
        }
        else {
            keyPasswordField.setEchoChar('*');
            seePassword = true;
        }
    }    
    
    private void keyPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            File mFile = new File("mKey.txt");
            Scanner reader = new Scanner(mFile);
            if(reader.hasNextLine()) {
                File decrypted = new File("decrypted.txt");
                try {
                    decrypted.createNewFile();
                } catch (IOException e) {
                    System.out.println("An error occurred.");
                    e.printStackTrace();
                }
                try {
                    CipherObj.decrypt(key, mFile, decrypted);
                } catch (CryptoException | NoSuchMethodError ex) {
                    System.out.println(ex.getMessage());
                    ex.printStackTrace();
                }
                Scanner dReader = new Scanner(decrypted);
                if (dReader.nextLine().equals(evt.getActionCommand())) {
                    seePassword = true;
                    mainPanel.setVisible(true);
                    masterPanel.setVisible(false);
                }
                dReader.close();
                decrypted.delete();
            }
            else {
                try {
                    File encrypted = new File("encrypted.txt");
                    try {
                        encrypted.createNewFile();
                    } catch (IOException e) {
                        System.out.println("An error occurred.");
                        e.printStackTrace();
                    }
                    FileWriter writer = new FileWriter("encrypted.txt");
                    writer.write(evt.getActionCommand());
                    writer.close();
                    try {
                        CipherObj.encrypt(key, encrypted, mFile);
                    } catch (Exception ex) {
                        System.out.println(ex.getMessage());
                        ex.printStackTrace();
                    }
                }
                catch ( IOException e) {
                    System.err.println( "Sorry, error with output file" );
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        File encrypted = new File("encrypted.txt");
        encrypted.delete();
        File decrypted = new File("decrypted.txt");
        decrypted.delete();
    }
    
    private void seePasswordButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if (seePassword) {
            passwordField.setEchoChar((char) 0);
            seePassword = false;
        }
        else {
            passwordField.setEchoChar('*');
            seePassword = true;
        }
    } 
    
    private void loginTitleFieldActionPerformed(java.awt.event.ActionEvent evt) { 
        if (!usernameField.getText().equals("") && !loginTitleField.getText().equals("")) {
            comboBox.addItem(loginTitleField.getText().trim());
            encryptEntry(usernameField.getText().trim(), passwordField.getPassword(), loginTitleField.getText().trim());
            usernameField.setText("");
            loginTitleField.setText("");
        }
    }  
    
    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {  
        if (!usernameField.getText().equals("") && !loginTitleField.getText().equals("")) {
            comboBox.addItem(loginTitleField.getText().trim());
            encryptEntry(usernameField.getText().trim(), passwordField.getPassword(), loginTitleField.getText().trim());
            usernameField.setText("");
            loginTitleField.setText("");
        } 
    }
    
    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {  
        if (!usernameField.getText().equals("") && !loginTitleField.getText().equals("")) {
            comboBox.addItem(loginTitleField.getText().trim());
            encryptEntry(usernameField.getText().trim(), passwordField.getPassword(), loginTitleField.getText().trim());
            usernameField.setText("");
            loginTitleField.setText("");
        }
    }                                           
    
    private void encryptEntry(String username, char[] password, String title) {
        File input = new File ("temp.txt");
        File output = new File("ntry"+title+".txt");
        try {
            input.createNewFile();
            output.createNewFile();
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        try {
            FileWriter writer = new FileWriter("temp.txt");
            writer.write(username+"\n");
            writer.write(password);
            writer.close();
        } catch ( IOException e) {
                System.err.println( "Sorry, error with output file" );
            }
        try {
            CipherObj.encrypt(key, input, output);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        input.delete();
    }
    
    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {       
        File output = new File("temp.txt");
        try {
            output.createNewFile();
        } catch(IOException ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        File input = new File("ntry"+comboBox.getSelectedItem()+".txt");
        try {
            CipherObj.decrypt(key, input, output);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
        try {
            Scanner reader = new Scanner(output);
            String username = reader.nextLine();
            String password = reader.nextLine();
            File out = new File("temp.txt");
            if (out.delete()) 
                System.out.println("yes");
            JOptionPane.showMessageDialog(null,"Username: "+username+"\n"+"Password: "+password );
        } catch( FileNotFoundException ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
    }   
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    } 

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel keyHelperLabel;
    private javax.swing.JPasswordField keyPasswordField;
    private javax.swing.JLabel keyPromptLabel;
    private javax.swing.JTextField loginTitleField;
    private javax.swing.JLabel loginTitleLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel masterPanel;
    private javax.swing.JLabel newLoginLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JRadioButton seePasswordButton;
    private javax.swing.JRadioButton seePasswordButton1;
    private javax.swing.JLabel sessionStatusLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration                   
}
